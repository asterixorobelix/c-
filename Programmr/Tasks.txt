/*
We are given 5 integer numbers. Write a program which checks if the sum of them is 0. and return true if any subset founded has sum=0 else false

Input:
1 2 3 4 5
Expected Output :
False

Input :
1 2 3 -2 -1
Expected Output :
True

Input:
1 2 3 -4 5
Expected ouput:
False
*/

/*
Take any natural number n.

If n is even, divide it by 2 to get n / 2.
If n is odd, multiply it by 3 and add 1 to get 3n + 1.
Repeat the process indefinitely.
In 1937, Lothar Collatz proposed that no matter what number you begin with, the sequence eventually reaches 1. This is widely believed to be true, but has never been formally proved.

Write a program which inputs a number from the user, and then displays the Collatz Sequence starting from that number. 
Stop when you reach 1. It should also count the steps that it takes to get to 1.

Starting number:
5
5 16 8 4 2 1
Terminated after:5 steps
*/

/*
Write a method to compute the distance between two points. Given two points (x1, y1) and (x2, y2), the distance between these points is given by the formula:
d=((x2-x1)^2+(y2-y1)^2)^0.5

You must name the method distance, and it must return a decimal giving the distance between the two points.
Tests:
Our Input (x1,y1,x2,y2)	Expected Output					Your code's output
0 0 0 0					distance = 0					distance = 0
-2 1 1 5				distance = 5					distance = 5
-2 -3 -4 4				distance = 7.28010988928052		distance = 7.28010988928052
*/

/*Write a program that prints the numbers from 1 to 100. But for multiples of three print "Fizz" instead of the number and for the multiples of five print "Buzz". 
For numbers which are multiples of both three and five print "FizzBuzz".
*/

/*
Write a program which picks a random number from 1-100. The user keeps guessing as long as their guess is wrong, and they've guessed less than 7 times. 
If their guess is higher than the number, say "Too high" if their guess is lower than the number, say "Too low". 
When they get it right, the game stops. Or, if they hit seven guesses, the game stops even if they never got it right. 

I am thinking of a number between 1-100. You have 7 guesses:
Guess #1:50
Too high
Guess #2:15
Too low
Guess #3:18
Correct. You won!
*/

/*
Write a program which can hold ten values, entered by the user, from 1 to 100. Find the largest value in the array, and display that value.

Array:
12
32
43
45
456
65
76
87
98
908
The largest value is 908
*/

/*
Write a C# program which can be used to calculate the body mass index (BMI). This is commonly used by health and nutrition professionals to estimate human body fat in populations.
BMI is computed by taking the individual's weight in kilograms and dividing it by the square of their height in meters. Output BMI to 4 decimal places, if decimals are non-zero. 
eg
Your Height in m: 1.75
Your Weight in kgs: 73
Your BMI is: 23.8367

Our Input	
2, 83
Expected Output	
20.75
*/

/*
Julio Cesar Chavez Mark VII is an interplanetary space boxer, who currently holds the championship belts for various weight categories on many different planets within our solar system. 
However, it is often difficult for him to recall what his "target weight" needs to be on earth in order to make the weight class on other planets. 
Write a program to help him keep track of this.

It should ask him what his earth weight is, and to enter a number for the planet he wants to fight on. It should then compute his weight on the destination planet based on the table below:

#	Planet	Relative gravity
1	Venus	0.78
2	Mars	0.39
3	Jupiter	2.65
4	Saturn	1.17
5	Uranus	1.05
6	Neptune	1.23
So, for example, if Julio weighs 128 lbs. on earth, then he would weigh just under 50 lbs. on Mars, since Mars' gravity is 0.39 times earth's gravity. (128 * 0.39 is 49.92)


Our Input	Expected Output	
80 1		62.4
*/

/*Read an integer number from the user and return number of zeros in the tail.

Input:
1505560
Output:
1

Input:
1001
Output:
0
*/

/*Ask the user for several pieces of information mentioned below, and display them on the screen afterwards as a summary. Ask for the following:
first name
last name
grade (classification)
student id number
login name
GPA (0.0 to 4.0)
*/

